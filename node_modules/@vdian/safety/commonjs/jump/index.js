"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.jump = void 0;
var url_legalize_1 = require("../url-legalize");
var constants_1 = require("../constants");
var util_1 = require("../util");
/**
 * 跳转方法
 * @param url 链接
 * @param replace boolean，默认为false。true: 使用location.replace，false: 使用location.href
 */
function jump(url, replace) {
    if (replace === void 0) { replace = false; }
    url = url_legalize_1.legalizeUrl(url);
    if (url !== constants_1.EMPTRY_URL) {
        if (replace) {
            constants_1.GLOBAL.location.replace(url);
        }
        else {
            constants_1.GLOBAL.location.assign(url);
        }
    }
}
exports.jump = jump;
// 代理默认方法
// function proxy() {
//     // override window.open only support url arguments
//     const originOpen = GLOBAL.open
//     // tslint:disable-next-line: only-arrow-functions
//     GLOBAL.open = function(url: string): Window | null {
//         const args = toArray(arguments) as any
//         args[0] = url === '' || url === undefined ? url : legalizeUrl(url)
//         return originOpen.apply(GLOBAL, args)
//     } as any
// }
// proxy()
// 处理嵌入第三方iframe中问题，Chrome将阻止父窗口跳转
function inIframe() {
    try {
        if (util_1.access("observeIframe" /* OBSERVE_IFRAME */)) {
            var topUrl = constants_1.GLOBAL.document.referrer || '';
            if (constants_1.GLOBAL.self != constants_1.GLOBAL.top && !url_legalize_1.isLegalUrl(topUrl)) {
                constants_1.GLOBAL.top.location.href = constants_1.GLOBAL.location.href;
            }
        }
    }
    catch (e) { }
}
util_1.domContentLoaded(inIframe);
