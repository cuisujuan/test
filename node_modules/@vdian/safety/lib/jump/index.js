import { legalizeUrl, isLegalUrl } from '../url-legalize';
import { GLOBAL, EMPTRY_URL } from '../constants';
import { access, domContentLoaded } from '../util';
/**
 * 跳转方法
 * @param url 链接
 * @param replace boolean，默认为false。true: 使用location.replace，false: 使用location.href
 */
export function jump(url, replace) {
    if (replace === void 0) { replace = false; }
    url = legalizeUrl(url);
    if (url !== EMPTRY_URL) {
        if (replace) {
            GLOBAL.location.replace(url);
        }
        else {
            GLOBAL.location.assign(url);
        }
    }
}
// 代理默认方法
// function proxy() {
//     // override window.open only support url arguments
//     const originOpen = GLOBAL.open
//     // tslint:disable-next-line: only-arrow-functions
//     GLOBAL.open = function(url: string): Window | null {
//         const args = toArray(arguments) as any
//         args[0] = url === '' || url === undefined ? url : legalizeUrl(url)
//         return originOpen.apply(GLOBAL, args)
//     } as any
// }
// proxy()
// 处理嵌入第三方iframe中问题，Chrome将阻止父窗口跳转
function inIframe() {
    try {
        if (access("observeIframe" /* OBSERVE_IFRAME */)) {
            var topUrl = GLOBAL.document.referrer || '';
            if (GLOBAL.self != GLOBAL.top && !isLegalUrl(topUrl)) {
                GLOBAL.top.location.href = GLOBAL.location.href;
            }
        }
    }
    catch (e) { }
}
domContentLoaded(inIframe);
