import { SEARCH_DELIMIT, PARAM_DELIMIT, GLOBAL } from './constants';
import { stringify, parse } from './querystring';
import * as util from './util';
import { Url } from './url';
/**
 * 设置url地址的querystring。
 * @param url 链接地址，如果url为null/undefined，则以当前页面url作为默认值。
 * @param params 参数对象。
 * @param options 设置参数合并规则，具体见参数合并规则。
 * @returns 设置后的url地址。
 */
export function setQuerystring(url, params, options) {
    // get window href
    var href = GLOBAL.location.href;
    // normalize arguments
    if (util.isObject(url)) {
        options = params;
        params = url;
        url = href;
    }
    // set href if url is undefined/null
    if (util.isUndef(url)) {
        url = href;
    }
    // merge options
    options = util.merge({
        replace: true
    }, options);
    var instance = new Url(url);
    if (options.replace) {
        // merge params if is replace
        instance.query = util.merge(instance.query || {}, params);
    }
    else {
        var search = stringify(params);
        if (search) {
            var delimit = instance.search.indexOf(SEARCH_DELIMIT) === -1
                ? SEARCH_DELIMIT
                : PARAM_DELIMIT;
            instance.search += delimit + search;
        }
    }
    return instance.toString();
}
/**
 * 获取传入url地址的参数对象。
 * @param url 链接地址 如果url为null/undefined，则以当前页面url作为默认值，如果url为相对地址，不进行url规整化处理。
 * @returns 序列化后的参数对象。
 */
export function getQuerystring(url) {
    if (util.isUndef(url)) {
        url = GLOBAL.location.href;
    }
    return parse(url);
}
export { Url };
