"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("@vdian/util");
var index_1 = require("./constants/index");
var index_2 = require("./normalize/index");
/**
 * 获取cookie
 *
 * 1、可获取当前域名以及父域名下当前路径及父路径cookie。
 * ```
 * const value = cookie.get('a')
 * ```
 * @param name cookie name
 * @returns cookie value 如果匹配不到指定cookie name，则返回undefined
 */
function get(name) {
    if (util_1.isEmpty(name)) {
        return;
    }
    var cookies = index_1.GLOBAL.document.cookie.split(index_1.COOKIE_DELIMIT);
    var value;
    cookies.some(function (cookie) {
        // get name and value
        var matchs = cookie.match(index_1.COOKIE_VALUE_REGXP);
        if (matchs && index_2.normalize.get.name(matchs[1]) === name) {
            value = index_2.normalize.get.value(matchs[2]);
            return true;
        }
        return false;
    });
    return value;
}
exports.get = get;
// max-age ie8及以下不支持，为了减少影响面，采用expires
function normalizeExpires(expires) {
    if (util_1.isNumber(expires)) {
        expires = new Date(new Date().getTime() + expires * 1000);
    }
    if (util_1.isDate(expires)) {
        return expires.toUTCString();
    }
}
/**
 * 设置cookie
 *
 * 1、可设置当前域名及父域名下任何路径cookie。
 * ```
 * // 默认path为'/'
 * cookie.set('b','e')
 * // 设置session cookie，但不建议设置session cookie，部分浏览器退出以后并不会清除
 * cookie.set('b', 'value')
 * ```
 * @param name cookie name
 * @param value cookie value
 * @param opts cookie attributes
 */
function set(name, value, opts) {
    if (util_1.isEmpty(name) || util_1.isUndef(value)) {
        return;
    }
    var options = util_1.merge({
        path: '/'
        // secure: true,
        // sameSite: 'none'
    }, opts);
    options.expires = normalizeExpires(options.expires);
    var attrs = '';
    util_1.forEach(options, function (val, key) {
        if (!val) {
            return;
        }
        // concat attr key
        attrs += index_1.COOKIE_DELIMIT + key;
        // if secure is true then set '; secure'
        if (val === true) {
            return;
        }
        // Considers RFC 6265 section 5.2:
        val = val.split(';')[0];
        // concat attr value
        attrs += index_1.COOKIE_VALUE_DELIMIT + val;
    });
    // normalize name and value
    name = index_2.normalize.set.name(name);
    value = index_2.normalize.set.value(value);
    // set cookie
    index_1.GLOBAL.document.cookie = name + index_1.COOKIE_VALUE_DELIMIT + value + attrs;
}
exports.set = set;
/**
 * 删除cookie
 *
 * 1、删除规则与set保持一致
 * ```
 * // 删除当前域名cookie
 * cookie.remove('a')
 * ```
 * @param name cookie name
 * @param opts cookie attributes
 */
function remove(name, opts) {
    set(name, '', util_1.merge(opts || {}, {
        expires: -864e5
    }));
}
exports.remove = remove;
