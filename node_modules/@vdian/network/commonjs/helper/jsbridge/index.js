"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("../../util");
var constants_1 = require("../../constants");
var error_1 = require("../../util/error");
function isMethodNotImplement(error) {
    var message = error.message, code = error.code;
    return (code === 10001 ||
        message.indexOf("\u6682\u672A\u5B9E\u73B0" /* IOS_MESSAGE */) !== -1 ||
        message.indexOf("not implemented" /* ANDROID_MESSAGE */) !== -1);
}
/**
 * @ignore
 */
function jsbridge(options) {
    var url = options.url, data = options.data;
    return new Promise(function (resolve, reject) {
        if (util_1.isUndef(constants_1.GLOBAL.KDJSBridge2)) {
            reject(error_1.createError('Jsbridge Undefined', -3 /* JSBRIDGE_ERROR */, 1 /* JSBRIDGE_UNDEFINED */));
            return;
        }
        constants_1.GLOBAL.KDJSBridge2.call('WDJSBridge', 'thorRequest', {
            url: url,
            param: data
        }, function (response) {
            var _a;
            var error = ((_a = response === null || response === void 0 ? void 0 : response.param) === null || _a === void 0 ? void 0 : _a._errMsg) || {};
            if (error.code === 0) {
                resolve(response);
            }
            else {
                if (isMethodNotImplement(error)) {
                    reject(error_1.createError('Jsbridge Method Not Implement Error', -3 /* JSBRIDGE_ERROR */, 2 /* METHOD_NOT_IMPLEMENT */));
                    return;
                }
                reject(error_1.createError(error.message || 'Jsbridge Method Call Error', -3 /* JSBRIDGE_ERROR */, 3 /* CALL_ERROR */));
            }
        });
    }).then(function (response) {
        return response.param.thorResponse;
    });
}
exports.default = jsbridge;
