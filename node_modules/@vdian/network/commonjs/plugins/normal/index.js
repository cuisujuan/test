"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("../../util");
function serialize(params) {
    if (util_1.isObject(params)) {
        util_1.forEach(params, function (value, key) {
            // stringify array and object, most api always use this
            if (util_1.isObject(value) || util_1.isArray(value)) {
                params[key] = JSON.stringify(value);
            }
        });
    }
}
function handleResponse(_a) {
    var response = _a.response, options = _a.options;
    var data = response.data;
    if (options.responseType === 'json' && !util_1.isWideObject(data)) {
        return Promise.reject(util_1.createError('JSON Data Error', -1 /* XHR_ERROR */, 1 /* JSON_ERROR */));
    }
    return data;
}
/**
 * @ignore
 */
function normal() {
    var context = this;
    context.hooks.push('configured', function (_a, next) {
        var options = _a.options;
        serialize(options.data);
        next();
    });
    var request = context.request;
    // tslint:disable-next-line
    context.request = function () {
        return request
            .apply(context, arguments)
            .then(handleResponse, function (args) {
            // get xhr request error
            var error = util_1.isError(args) ? args : args.error;
            return Promise.reject(error);
        });
    };
}
exports.default = normal;
