import { HookCallback } from '../hooks';
interface XMLHttpRequestHeaders {
    [key: string]: string;
}
export interface XMLHttpRequestExtra {
    /**
     * 是否获取设备ID，默认为false
     */
    deviceId: boolean;
    /**
     * 是否启用jsbridge发送native请求，默认为false
     */
    useNative: boolean;
}
/**
 * request 方法参数
 */
export interface XMLHttpRequestOptions {
    /**
     * 请求方法，默认：get
     */
    method?: string;
    /**
     * 是否携带cookie，默认：true
     */
    withCredentials?: boolean;
    /**
     * 是否缓存请求，默认：false
     */
    cache?: boolean;
    /**
     * 请求响应结果类型，默认：json
     */
    responseType?: XMLHttpRequestResponseType;
    /**
     * 请求头
     */
    headers?: XMLHttpRequestHeaders;
    /**
     * 请求数据
     */
    data?: object | FormData | URLSearchParams;
    /**
     * 扩展参数，用于特殊场景
     */
    extra?: XMLHttpRequestExtra;
}
interface RequestHooks {
    configured: HookCallback;
    beforeRequest: HookCallback;
    beforeSuccess: HookCallback;
    success: (args: any) => void;
    error: (args: any) => void;
    beforeError: HookCallback;
}
export interface NetworkRequestOptions extends RequestHooks, XMLHttpRequestOptions {
    url: string;
}
interface Response {
    data: any;
    status: number;
}
/**
 * @ignore
 */
export interface NetworkRequestResponse {
    options: NetworkRequestOptions;
    request: XMLHttpRequest;
    response?: Response;
    error?: Error;
}
/**
 * @ignore
 */
export default function xhr(options: NetworkRequestOptions): void;
export {};
