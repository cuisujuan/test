/**
 * @ignore
 */
export declare type HookNext = (error?: Error) => void;
/**
 * @ignore
 */
export declare type HookCallback = (args: any, next: HookNext) => void;
declare type HookInvokeCallback = (error?: Error) => void;
interface HooksCallbacks {
    [key: string]: HookCallback[];
}
/**
 * @ignore
 * Hooks类，用于在请求过程中插入钩子函数，方便开发者介入到请求各个过程中。
 */
export default class Hooks {
    hooks: HooksCallbacks;
    constructor();
    /**
     * push方法，该方法作用为插入指定钩子函数。
     * @param name hook名称
     * @param fn hook hook回调函数
     * @returns Hooks实例
     */
    push(name: string, fn: HookCallback): Hooks;
    unshift(name: string, fn: HookCallback): Hooks;
    invokeWaterfall(name: string, args: object, callback: HookInvokeCallback): Hooks;
}
export {};
