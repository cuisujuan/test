import { GLOBAL } from '../constants';
import { isWDBuyer } from '@vdian/user-agent';
export * from '@vdian/util';
export * from './error';
/**
 * @ignore
 */
export function isResponseOk(status) {
    return (status >= 200 && status < 300) || status == 304;
}
/**
 * @ignore
 */
export function parseJSON(value) {
    try {
        return JSON.parse(value);
    }
    catch (e) { }
}
/**
 * @ignore
 */
export function isNativeFunction(value) {
    return (typeof value === 'function' &&
        value.toString().indexOf('[native code]') !== -1);
}
/**
 * @ignore
 */
export function isUseNative(options) {
    var _a;
    return isWDBuyer() && ((_a = options === null || options === void 0 ? void 0 : options.extra) === null || _a === void 0 ? void 0 : _a.useNative);
}
/**
 * @ignore
 */
export function goto(url) {
    url && GLOBAL.location.assign(url);
}
/**
 * @ignore
 */
export function isThor(hostname) {
    var thorRegExp = /^thor\./gi;
    return thorRegExp.test(hostname);
}
/**
 * @ignore
 *
 * get base domain from hostname
 * base domain aka eTLD+1
 */
export function getBaseDomain(hostname) {
    var fragments = hostname.split('.');
    var length = fragments.length;
    return (fragments[length - 2] + "." + fragments[length - 1]).toLowerCase();
}
