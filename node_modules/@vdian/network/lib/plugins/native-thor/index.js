import { isUndef } from '../../util';
function enhanceErrorResponse(error) {
    var code = error.code, subcode = error.subcode, message = error.message;
    return {
        status: {
            code: !isUndef(code) ? code : -3 /* JSBRIDGE_ERROR */,
            subcode: subcode,
            message: message
        },
        result: null
    };
}
function handleResponse(data) {
    // if status.code === 0,resolve response
    if (data && data.status && data.status.code === 0) {
        return data;
    }
    return Promise.reject(data);
}
function handleErrorResponse(error) {
    return Promise.reject(enhanceErrorResponse(error));
}
/**
 * @ignore
 */
export default function nativeThor() {
    var context = this;
    var request = context.request;
    // tslint:disable-next-line
    context.request = function () {
        return request
            .apply(context, arguments)
            .then(handleResponse, handleErrorResponse);
    };
}
