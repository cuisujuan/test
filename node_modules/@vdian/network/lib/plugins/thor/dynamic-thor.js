import { Url } from '@vdian/url';
import { isThor, getBaseDomain } from '../../util';
import { WHITE_MULTI_DOMAINS } from '../../constants';
// 判断当前页面是否是多域名页面
function isMultiDomain(baseDomain) {
    return WHITE_MULTI_DOMAINS.indexOf(baseDomain) > -1;
}
/**
 * 将入参 url 中的 base domain 转为多域名列表中的 base domain
 * @param url thor 接口的 url 链接
 * @return 转换后的 thor 接口 url，其 base domain 在多域名列表中。
 */
export function getDynamicThor(url) {
    var apiUrl = new Url(url);
    // api 接口的 hostname
    var apiHostname = apiUrl.hostname;
    // 当前页面 base domain
    var pageBaseDomain = getBaseDomain(location.hostname);
    // 非 thor 接口或者当前页面的 base domain 不在多域名列表中，则不替换，直接返回原 url
    if (!isThor(apiHostname) || !isMultiDomain(pageBaseDomain)) {
        return url;
    }
    var baseDomainRegExp = new RegExp(getBaseDomain(apiHostname) + '$');
    // 将接口中的 base domain替换为当前页面的 base domain
    apiUrl.hostname = apiHostname.replace(baseDomainRegExp, pageBaseDomain);
    return apiUrl.href;
}
