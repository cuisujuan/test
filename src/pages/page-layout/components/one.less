@u: 75rem;
.page-layout{
  //width: 100%;
  height: 100%;
  .content-box{
    box-sizing:content-box;
    width: 100/@u;
    height: 100/@u;
    margin: 20/@u;
    padding: 10/@u;
    border: 1px solid red;
    
  }
  .border-box{
    box-sizing:border-box;
    width: 100/@u;
    height: 100/@u;
    margin: 20/@u;
    padding: 10/@u;
    border: 1px solid blue;
  }
  .flexbox{
    display: flex;
    width: 200/@u;
    height: 100/@u;
    margin: 20/@u;
    padding: 10/@u;
    border: 1px solid yellowgreen;
    justify-content: center;
    align-items: center;
    
  }
  .box{
    box-sizing: content-box;
    .inherit{
      box-sizing: initial;
      width: 200/@u;
      height: 100/@u;
      margin: 20/@u;
      padding: 10/@u;
      display: inline-block;
      border: 1px solid black;
    }
  }
  .parent{
    width: 200/@u;
    height: 100/@u;
    background: yellowgreen;
    font-size: 30/@u;
    .children{
      //都是相对于父元素宽的一半
      width: 50%;
      padding: 50%;//100/@u
      margin:50%;//100/@u
      left:50%;//100/@u
      right: 50%;//100/@u
      
    //都是相对于父元素高的一半
      height: 50%;//50/@u
      top:50% ;
      bottom: 50%;
      background: blue;

      //相对于继承字号的,此时继承的父元素的字体
      font-size: 80%;//24/@u
      
       //相对于自身字号
      line-height: 80%;//19.2/@u

      //相对于自身宽高
      border-radius:50%;//25/@u
      //background-size,border-image-width
      transform: translate(20%);
      transform:  rotate(45deg);

      transform-origin:20% 20%;


      //特殊
      //background-position:（方向长度 / 该方向除背景图之外部分总长度 * 100）、
      //filter 系列函数等；
      //相对于父元素的定位
      position: absolute;//此class的父元素是相对于离它最近 position 不为 static 的外层元素，如无，则相对于窗口。
      position: fixed;//此class的父元素是视口；视口：浏览器显示页面内容的屏幕区域
//fixed:相对于浏览器窗口进行定位;absolute:离它最近 position 不为 static 的父元素;relative相对于其正常位置进行定位;static:没有定位，元素出现在正常的流中（忽略 top, bottom, left, right 或者 z-index 声明）。inherit:规定应该从父元素继承 position 属性的值。

    }
  }
  .bfc-example-0 {
    width: 210px;
    border: 1px solid #000;
  }
  .bfc-example-0-img {
    width: 100px;
    height: 100px;
    background: #696;
    float: left;//此时这个class的文字部分超过规定的范围，
    //用overflow: hidden;-->BFC( 块级格式上下文）的运用是一个独立的容器环境，在这个环境里，物品的摆放是不受外界影响的
  //BFC包括
  /* 
    浮动元素
    position: absolute / fixed
    块级盒子：overflow 值不为 visible
    非块级盒子 display 值为：inline-block、table-cell、table-caption
   */
  }
  .bfc-example-0-info {
    background: #ccc;
    color: #fff;
    margin:0;
  }	
  .parent-one{
    //方法1父元素宽高包裹子元素
    //overflow: hidden;//创建了新的 BFC 的元素，元素和其子元素不在同一个 BFC 中，无法实现外边距合并。
                    //此时父级的边框并不是20/@u
    margin: 10/@u;

    .children-one{
      margin: 10/@u;
      width: 200/@u;
      height: 100/@u;
      background-color: blueviolet;
      float: left;//导致脱离文档流，当父元素不设置宽高时，子元素并不在其父元素中，
      //父元素宽高而是由子元素支撑起来，则会导致父元素的高度塌陷(原本的height后来被置为0)
    }
    //方法2
   /*  .children-two{
      clear: both;
    } */
  }
    //方法3
  /* .parent-one::after{
    content: '';
    display: block;
    clear:both
  }  */
  
}